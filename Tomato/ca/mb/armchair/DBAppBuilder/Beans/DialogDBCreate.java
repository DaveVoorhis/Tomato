package ca.mb.armchair.DBAppBuilder.Beans;

/*
 * DialogSelectDB.java
 *
 * Created on November 14, 2001, 11:46 AM
 */

import java.sql.*;

/**
 *
 * @author  creatist
 */
public class DialogDBCreate extends javax.swing.JDialog {

    private DatabaseConnection dbC = null;
    private DatabaseConnections dbCs = new DatabaseConnections();
    
    /** Creates new empty form DialogDBCreate */
    public DialogDBCreate() {
        initComponents();
        comboBoxExistingDB.setModel(dbCs.getComboBoxModel());
        fldConnectionName.setText("New Database");
        fldDatabaseName.setText("NewDB");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelExistingDB = new javax.swing.JLabel();
        comboBoxExistingDB = new javax.swing.JComboBox();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jScrollPaneStatus = new javax.swing.JScrollPane();
        fldStatus = new javax.swing.JTextArea();
        jLabelConnectionName = new javax.swing.JLabel();
        jLabelDatabaseName = new javax.swing.JLabel();
        fldConnectionName = new javax.swing.JTextField();
        fldDatabaseName = new javax.swing.JTextField();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Create Database");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabelExistingDB.setText("Existing database:");
        jLabelExistingDB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelExistingDB.setPreferredSize(new java.awt.Dimension(136, 13));
        jLabelExistingDB.setMinimumSize(new java.awt.Dimension(136, 13));
        jLabelExistingDB.setMaximumSize(new java.awt.Dimension(136, 13));
        jLabelExistingDB.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 2);
        getContentPane().add(jLabelExistingDB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        getContentPane().add(comboBoxExistingDB, gridBagConstraints);

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 4, 0);
        getContentPane().add(btnOk, gridBagConstraints);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 4, 0);
        getContentPane().add(btnCancel, gridBagConstraints);

        jLabelStatus.setText("Status:");
        jLabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        getContentPane().add(jLabelStatus, gridBagConstraints);

        jScrollPaneStatus.setPreferredSize(new java.awt.Dimension(800, 200));
        jScrollPaneStatus.setMinimumSize(new java.awt.Dimension(200, 50));
        fldStatus.setWrapStyleWord(true);
        fldStatus.setEnabled(false);
        jScrollPaneStatus.setViewportView(fldStatus);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        getContentPane().add(jScrollPaneStatus, gridBagConstraints);

        jLabelConnectionName.setText("Connection name:");
        jLabelConnectionName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        getContentPane().add(jLabelConnectionName, gridBagConstraints);

        jLabelDatabaseName.setText("Database name:");
        jLabelDatabaseName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        getContentPane().add(jLabelDatabaseName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        getContentPane().add(fldConnectionName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        getContentPane().add(fldDatabaseName, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
       
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dbC=null;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        DatabaseConnection channel = 
            dbCs.getDatabaseConnectionFromSelection(comboBoxExistingDB);
        if (channel!=null)
        {
            if (channel.executeUpdate("create database \"" + fldDatabaseName.getText() + "\";"))
            {
                String newURL;
                // newURL is old URL with new database name
                newURL = channel.getURL();
                dbC = new DatabaseConnection(fldConnectionName.getText(),
                                             channel.getDriver(),
                                             channel.getLogin(),
                                             channel.getPassword(),
                                             newURL);
                Connection con=dbC.getConnection();
                if (con==null)
                    fldStatus.setText("1 Database creation appeared to succeed, but subsequent connection failed:\n\n"+dbC.getStatus());
                else 
                {
                    fldStatus.setText("0 Database creation succeeded:\n\n"+dbC.getStatus());
                    setVisible(false);
                    dispose();
                }
            }
            else
                fldStatus.setText("2 Database create failed:\n\n"+channel.getStatus());
        }
    }//GEN-LAST:event_btnOkActionPerformed
    
    /** Obtain a connection.  Null if no connection obtained. */
    public DatabaseConnection getDatabaseConnection() {
        return dbC;
    }
        
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelExistingDB;
    private javax.swing.JLabel jLabelConnectionName;
    private javax.swing.JLabel jLabelDatabaseName;
    private javax.swing.JTextField fldConnectionName;
    private javax.swing.JScrollPane jScrollPaneStatus;
    private javax.swing.JTextField fldDatabaseName;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JTextArea fldStatus;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox comboBoxExistingDB;
    // End of variables declaration//GEN-END:variables
    
}
